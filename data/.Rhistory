geom_histogram()+
geom_density() +
theme_classic() +
labs(x = "Final Weight") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
hist.fnlwgt.norm
qqplot.age = ggplot(adult.data, aes(sample = fnlwgt)) +
stat_qq() +
stat_qq_line() +
theme_classic() +
labs(y = "Final Weight") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
qqplot.weight = ggplot(adult.data, aes(sample = fnlwgt)) +
stat_qq() +
stat_qq_line() +
theme_classic() +
labs(y = "Final Weight") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
qqplot.weight
ggsave("fnlwgt_qqplot.pdf", qqplot.weight, device = "pdf", width = 20, height = 20)
qqplot.fnlwgt.normalized = ggplot(adult.data, aes(sample = log(fnlwgt))) +
stat_qq() +
stat_qq_line() +
theme_classic() +
labs(y = "sqrt(Final Weight)") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
qqplot.fnlwgt.normalized
ggsave("fnlwgt_normalized_qqplot.pdf", qqplot.age.normalized, device = "pdf", width = 20, height = 20)
ggsave("fnlwgt_normalized_qqplot.pdf", qqplot.fnlwgt.normalized, device = "pdf", width = 20, height = 20)
qqplot.fnlwgt.normalized = ggplot(adult.data, aes(sample = log(fnlwgt))) +
stat_qq() +
stat_qq_line() +
theme_classic() +
labs(y = "log(Final Weight)") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
qqplot.fnlwgt.normalized
ggsave("fnlwgt_normalized_qqplot.pdf", qqplot.fnlwgt.normalized, device = "pdf", width = 20, height = 20)
grid.age.normalization = grid.arrange(hist.age, hist.age.normalized,
qqplot.age, qqplot.age.normalized, nrow = 2, ncol = 2)
ggsave("grid_age_normalization.pdf", grid.age.normalization, device = "pdf", width = 20, height = 20)
qqplot.fnlwgt = ggplot(adult.data, aes(sample = fnlwgt)) +
stat_qq() +
stat_qq_line() +
theme_classic() +
labs(y = "Final Weight") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
qqplot.fnlwgt
ggsave("fnlwgt_qqplot.pdf", qqplot.fnlwgt, device = "pdf", width = 20, height = 20)
grid.fnlwgt.normalization = grid.arrange(hist.fnlwgt, hist.fnlwgt.norm,
qqplot.fnlwgt, qqplot.fnlwgt.normalized, nrow = 2, ncol = 2)
ggsave("grid_fnlwgt_normalization.pdf", grid.fnlwgt.normalization, device = "pdf", width = 20, height = 20)
adult.data$age = sqrt(adult.data$age)
adult.data$fnlwgt = log(adult.data$fnlwgt)
# Relationship between response and continuous covariates ####
boxplot.age.income = ggplot(adult.data, aes(income, age)) +
geom_boxplot() +
theme_classic() +
labs(y = "Age") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.age.income
boxplot.fnlwgt.income = ggplot(adult.data, aes(income, fnlwgt)) +
geom_boxplot() +
theme_classic() +
labs(y = "Final Weigth") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.fnlwgt.income
boxplot.fnlwgt.income = ggplot(adult.data, aes(income, fnlwgt)) +
geom_boxplot() +
theme_classic() +
labs(y = "Final Weight") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.fnlwgt.income
# Relationship between response and continuous covariates ####
boxplot.age.income = ggplot(adult.data, aes(income, age)) +
geom_boxplot(fill = c("darkred", "darkblue")) +
theme_classic() +
labs(y = "Age") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.age.income
boxplot.fnlwgt.income = ggplot(adult.data, aes(income, fnlwgt)) +
geom_boxplot(fill = c("darkred", "darkblue")) +
theme_classic() +
labs(y = "Final Weight") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.fnlwgt.income
boxplot.age.income
# Relationship between categorical and continuous covariates
# Income by Industry
boxplot.industry.income = ggplot(adult.data, aes(income, industry)) +
geom_boxplot(fill = c("darkred", "darkblue")) +
theme_classic() +
labs(y = "Income", x = "Industry") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
# Relationship between categorical and continuous covariates
# Income by Industry
boxplot.industry.income = ggplot(adult.data, aes(income, industry)) +
geom_boxplot(fill = c("darkred", "darkblue")) +
theme_classic() +
labs(y = "Income", x = "Industry") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.industry.income
View(adult.data)
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.income = ggplot(adult.data, aes(income, workclass)) +
geom_boxplot(fill = c("darkred", "darkblue")) +
theme_classic() +
labs(y = "Income", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.income
View(adult.data)
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.income = ggplot(adult.data, aes(income, workclass)) +
geom_boxplot() +
theme_classic() +
labs(y = "Income", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.income
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.income = ggplot(adult.data, aes(income, workclass)) +
geom_tile() +
theme_classic() +
labs(y = "Income", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.income
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.income = ggplot(adult.data, aes(income, workclass)) +
geom_tile(fill = value) +
theme_classic() +
labs(y = "Income", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.income
cor(adult.data$income, adult.data$workclass)
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.age = ggplot(adult.data, aes(age, workclass)) +
geom_tile(fill = value) +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.age
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.age = ggplot(adult.data, aes(age, workclass)) +
geom_tile(fill = value) +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.age = ggplot(adult.data, aes(age, workclass)) +
geom_tile() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.age
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.age = ggplot(adult.data, aes(age, workclass)) +
geom_boxplot() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.age
# Relationship between categorical and continuous covariates
# Income by workclass
boxplot.workclass.age = ggplot(adult.data, aes(workclass, age)) +
geom_boxplot() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.age
boxplot.workclass.age = ggplot(adult.data, aes(workclass, age)) +
geom_hist() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.age
hist.workclass.age = ggplot(adult.data, aes(workclass, age)) +
geom_hist() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
boxplot.workclass.age
hist.workclass.age = ggplot(adult.data, aes(workclass, age)) +
geom_histogram() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
hist.workclass.age
View(adult.data)
hist.workclass.age = ggplot(adult.data) +
geom_bar(x = workclass, y = count, fill = income) +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
View(adult.data)
hist.workclass.age = ggplot(adult.data) +
geom_bar(aes(x = workclass, y = count, fill = income)) +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
hist.workclass.age
hist.workclass.age = ggplot(adult.data, aes(x = workclass, y = count, fill = income)) +
geom_bar() +
theme_classic() +
labs(y = "Age", x = "Workclass") +
theme(legend.position = "right",
aspect.ratio = 1,
title = element_text(size = 28),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 28),
axis.text.y = element_text(size = 28),
axis.title.y = element_text(size = 28),
axis.title.x = element_text(size = 28),
legend.key = element_blank(), legend.key.size = unit(3,"line"),
legend.title=element_text(size=28))
hist.workclass.age
# Libraries
library(tibble)
library(data.table)
library(dplyr)
library(ggplot2)
# Global Variables
dir = "Put your directory here"
dir = "C:\\Users\\ettag\\Documents\\GitHub\\Stastistical-Learning-Project\\data"
setwd(dir = dir)
# Loading the dataset
adult.csv.directory = paste(dir, "\\drug_consumption.data", sep = "")
# Libraries
library(tibble)
library(data.table)
library(dplyr)
library(ggplot2)
# Global Variables
dir = "Put your directory here"
dir = "C:\\Users\\ettag\\Documents\\GitHub\\Stastistical-Learning-Project\\data"
setwd(dir = dir)
# Loading the dataset
drug.csv.directory = paste(dir, "\\drug_consumption.data", sep = "")
drug.data = read.csv(drug.csv.directory, sep = ",")
drug.data = as.data.table(drug.data)
dim(drug.data)[1]  # 48842 rows
dim(drug.data)[1]  # 1884 rows
summary(drug.data)
# Loading the dataset
drug.csv.directory = paste(dir, "\\drug_consumption.data", sep = "")
drug.data = read.csv(drug.csv.directory, sep = ",")
View(drug.data)
drug.data = read.csv(drug.csv.directory, sep = ",", header = T)
drug.data = load(drug.csv.directory)
drug.data = load(drug.csv.directory, header = T)
drug.data = read.csv(drug.csv.directory, header = T, sep = ",")
drug.data = as.data.table(drug.data)
dim(drug.data)[1]  # 1884 rows
summary(drug.data)
# Loading the dataset
drug.csv.directory = paste(dir, "\\drug_consumption.csv", sep = "")
drug.data = read.csv(drug.csv.directory, header = T, sep = ",")
# Loading the dataset
drug.csv.directory = paste(dir, "\\drug_consumption.csv", sep = "")
drug.data = read.csv(drug.csv.directory, header = T, sep = ",")
drug.data = as.data.table(drug.data)
dim(drug.data)[1]  # 1884 rows
summary(drug.data)
View(drug.data)
